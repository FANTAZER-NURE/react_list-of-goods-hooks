{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isStarted","setStart","className","type","onClick","copy","sort","a","b","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,WACIF,GAEE,wBACEG,KAAK,SACLC,QA/BE,WACZH,GAAS,IA+BCC,UAAU,wCAHZ,mBASHF,GAEG,wBACEG,KAAK,SACLC,QAtCK,WACf,IAAMC,EAAI,YAAOP,GAEjBC,EAASM,EAAKC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,QAoCnCN,UAAU,0BAHZ,iCASHF,GAEG,wBACEG,KAAK,SACLC,QA3CI,WACd,IAAMC,EAAI,YAAOP,GAEjBC,EAASM,EAAKC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,YAyChCR,UAAU,0BAHZ,4BASHF,GAEG,wBACEG,KAAK,SACLC,QAhDI,WACdL,EAAS,YAAID,GAAOa,YAgDVT,UAAU,0BAHZ,qBASHF,GAEG,wBACEG,KAAK,SACLC,QAvDE,WACZL,EAASJ,IAuDCO,UAAU,4BAHZ,sBAULF,GAEK,oBAAIE,UAAU,cAAd,SACGF,GACIF,EAAMc,KAAI,SAAAC,GAAI,OACf,oBAAIX,UAAU,0BAAd,SAAoDW,GAAPA,YC1G/DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e969c02b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isStarted, setStart] = useState(false);\n\n  const start = () => {\n    setStart(true);\n  };\n\n  const sortAlph = () => {\n    const copy = [...goods];\n\n    setGoods(copy.sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortLen = () => {\n    const copy = [...goods];\n\n    setGoods(copy.sort((a, b) => a.length - b.length));\n  };\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App column\">\n      <div className=\"level\">\n        {!isStarted\n          && (\n            <button\n              type=\"button\"\n              onClick={start}\n              className=\"button is-light is-primary level-item\"\n            >\n              Start\n            </button>\n          )}\n\n        {isStarted\n          && (\n            <button\n              type=\"button\"\n              onClick={sortAlph}\n              className=\"button is-light is-link\"\n            >\n              Sort alphabetically\n            </button>\n          )}\n\n        {isStarted\n          && (\n            <button\n              type=\"button\"\n              onClick={sortLen}\n              className=\"button is-light is-link\"\n            >\n              Sort by length\n            </button>\n          )}\n\n        {isStarted\n          && (\n            <button\n              type=\"button\"\n              onClick={reverse}\n              className=\"button is-light is-link\"\n            >\n              Reverse\n            </button>\n          )}\n\n        {isStarted\n          && (\n            <button\n              type=\"button\"\n              onClick={reset}\n              className=\"button is-light is-danger\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      {isStarted\n          && (\n            <ul className=\"panel Goods\">\n              {isStarted\n                && goods.map(good => (\n                  <li className=\"Goods__item panel-block\" key={good}>{good}</li>\n                ))}\n            </ul>\n          )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}